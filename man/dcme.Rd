% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dcme.R
\name{dcme}
\alias{dcme}
\title{Double-Complier Mediation Effect with Instrumental Variables}
\usage{
dcme(
  data,
  W,
  A,
  L,
  Z,
  M,
  Y,
  family = c("binomial", "gaussian"),
  folds = 1,
  g_learners = "SL.glm",
  q_learners = "SL.glm",
  p_learners = "SL.glm",
  c_learners = "SL.glm",
  y_learners = "SL.glm"
)
}
\arguments{
\item{data}{A data.frame}

\item{W}{Name of baseline confounders}

\item{A}{Name of instrument for Z}

\item{L}{Name of instrument for M}

\item{Z}{Name of binary exposure}

\item{M}{Name of binary mediator}

\item{Y}{Name of outcome variable}

\item{family}{Variable type for outcome, Y. Options are "binomial" or "gaussian"}

\item{folds}{Number of folds for crossfitting}

\item{g_learners}{SuperLearner library, default is "SL.glm"}

\item{q_learners}{SuperLearner library, default is "SL.glm"}

\item{p_learners}{SuperLearner library, default is "SL.glm"}

\item{c_learners}{SuperLearner library, default is "SL.glm"}

\item{y_learners}{SuperLearner library, default is "SL.glm"}
}
\value{
A list of parameter estimates and confidence intervals.
}
\description{
Double-Complier Mediation Effect with Instrumental Variables
}
\examples{
library(dcme)

n <- 1000
w_1 <- rbinom(n, 1, prob = 0.6)
w_2 <- rbinom(n, 1, prob = 0.3)
w <- cbind(
  w_1, w_2,
  rbinom(n, 1, prob = pmin(0.2 + (w_1 + w_2) / 3, 1))
)

a <- rbinom(n, 1, prob = 0.5)
l <- rbinom(n, 1, plogis(rowMeans(-log(2) + w + 3*a - 1)))
z <- rbinom(n, 1, plogis(rowMeans(-log(1.1) * w) + 3*a - l))
m <- rbinom(n, 1, plogis(rowSums(-log(3) * w[,-3]) + 2*l + z - 1))
y <- rbinom(n, 1, plogis(rowSums(-log(5)*w) + z + m + .3))

colnames(w) <- paste("W", seq_len(ncol(w)), sep = "")
tmp <- as.data.frame(cbind(W = w, A = a, Z = z, L = l, M = m, Y = y))

dcme(tmp, paste0("W", 1:3), "A", "L", "Z", "M", "Y", "binomial", 1)
}
